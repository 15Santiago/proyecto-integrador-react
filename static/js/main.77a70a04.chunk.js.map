{"version":3,"sources":["Components/HeaderSection/index.jsx","Components/ButtonSection/index.jsx","Components/FooterSection/index.jsx","HomePage/index.jsx","Helpers/appContext.js","Helpers/useData.js","Components/CardSection/index.jsx","AmericasPage/index.jsx","EuropePage/index.jsx","AsiaPage/index.jsx","OceaniaPage/index.jsx","AfricaPage/index.jsx","App.js","index.js"],"names":["HeaderSection","_ref","title","React","createElement","className","ButtonSection","text","imageUrl","altAtribute","action","concat","onClick","src","alt","FooterSection","HomePage","navigate","useNavigate","Fragment","appContext","createContext","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","CardSection","flag","capital","area","poblation","AmericasPage","countries","useContext","countryData","filter","country","region","map","common","translations","spa","population","flags","svg","EuropePage","AsiaPage","OceaniaPage","AfricaPage","App","_useFetchCountries","url","_useState","useState","_useState2","_slicedToArray","setCountries","useEffect","_fetchCountries","_asyncToGenerator","_callee","response","data","_context","fetch","json","t0","console","log","apply","arguments","fetchCountries","useFetchCountries","_useFetchCountries2","HashRouter","Provider","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.77a70a04.chunk.js","sourcesContent":["import React from \"react\";\nimport './Header.css';\n\nfunction HeaderSection ({title}) {\n    return (\n        <header className=\"header-section\">\n            <h1 className=\"title\">{title}</h1>\n        </header>\n    );\n};\n\nexport { HeaderSection };","import React from \"react\";\nimport './Button.css';\n\nfunction ButtonSection ({text, imageUrl, altAtribute, action}) {\n    const handleFunction = () => {\n        action();\n    };\n\n    return (\n        <div className={`button ${altAtribute}`} onClick={handleFunction}>\n            <img src={imageUrl} alt={altAtribute} className=\"image-button\"/>\n            <h3 className=\"button-title\">{text}</h3>\n        </div>\n    );\n};\n\nexport { ButtonSection };","import React from \"react\";\nimport './styles.css';\n\nfunction FooterSection () {\n    return (\n        <footer className=\"footer-container\">\n            <img src=\"https://www.usbbog.edu.co/wp-content/uploads/2021/06/logoUSBBOG.png\" alt=\"logo-universidad-de-san-buenventura\" className=\"footer-image\"/>\n            <section className=\"names-container\">\n                <p className=\"footer-text first-name\">Santiago Rodriguez</p>\n                <p className=\"footer-text second-name\">Edwin Agudelo</p>\n                <p className=\"footer-text third-name\">Cristian Albornoz</p>\n            </section>\n        </footer>\n    );\n};\n\nexport { FooterSection };","import React from \"react\";\nimport { HeaderSection } from \"../Components/HeaderSection/index\";\nimport { ButtonSection } from \"../Components/ButtonSection/index\";\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\nimport { FooterSection } from \"../Components/FooterSection\";\n\nfunction HomePage () {\n    const navigate = useNavigate();\n\n    const changeToAmerica = () => {\n        navigate('/Americas');\n    };\n    const changeToEuropa = () => {\n        navigate('/Europe');\n    };\n    const changeToAsia = () => {\n        navigate('/Asia');\n    };\n    const changeToOceania = () => {\n        navigate('/Oceania');\n    };\n    const changeToAfrica = () => {\n        navigate('/Africa');\n    };\n\n    return (\n        <React.Fragment>\n            <HeaderSection title={'Datos'}/>\n            <main>\n                <section className=\"text-container\">\n                    <p>Escoge uno de los siguientes contienentes para ver sus paises.</p>\n                </section>\n\n                <section className=\"buttons-container\">\n                    <ButtonSection \n                        text={'America'} \n                        imageUrl={'../images/earth-america-o-svgrepo-com.svg'}\n                        altAtribute={'america-button'}\n                        action={changeToAmerica}\n                    />\n                    <ButtonSection \n                        text={'Europa'} \n                        imageUrl={'../images/globe-showing-europe-svgrepo-com.svg'}\n                        altAtribute={'europe-button'}\n                        action={changeToEuropa}\n                    />\n                    <ButtonSection \n                        text={'Asia'} \n                        imageUrl={'../images/earth-asia-oceania-svgrepo-com.svg'}\n                        altAtribute={'asia-button'}\n                        action={changeToAsia}\n                    />\n                    <ButtonSection \n                        text={'Oceania'} \n                        imageUrl={'../images/australian-continent-svgrepo-com.svg'}\n                        altAtribute={'oceania-button'}\n                        action={changeToOceania}\n                    />\n                    <ButtonSection \n                        text={'Africa'} \n                        imageUrl={'../images/africa-continent-svgrepo-com.svg'}\n                        altAtribute={'africa-button'}\n                        action={changeToAfrica}\n                    />\n                </section>\n            </main>\n            <FooterSection />\n        </React.Fragment>\n    );\n};\n\nexport { HomePage };","import React from \"react\";\n\nconst appContext = React.createContext(null);\n\nexport { appContext };","import { useState, useEffect } from 'react';\n\nfunction useFetchCountries(url) {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    async function fetchCountries() {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        setCountries(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchCountries();\n  }, [url]);\n\n  return [countries, setCountries];\n};\n\nexport { useFetchCountries };","import React from \"react\";\nimport './styles.css';\n\nfunction CardSection ({ name, flag, capital, area, poblation }) {\n    return (\n        \n        <div className=\"card-container\">\n            <img src={flag} alt={`${name}-flag`} className=\"country-flag\"/>\n            <section className=\"principal-info-container\">\n                <h2 className=\"name-country\">{name}</h2>\n                <h4 className=\"name-capital\">Capital: {capital}</h4>\n            </section>\n            <section className=\"secondary-info-container\">\n                <p>Área: {area} km2.</p>\n                <p>Población: {poblation} habitantes.</p>\n            </section>\n        </div>\n    );\n};\n\nexport { CardSection };","import React from \"react\";\nimport { HeaderSection } from '../Components/HeaderSection';\nimport { FooterSection } from \"../Components/FooterSection\";\nimport { appContext } from '../Helpers/appContext';\nimport { CardSection } from \"../Components/CardSection\";\nimport './styles.css';\n\nfunction AmericasPage () {\n    const { countries } = React.useContext(appContext);\n    const region = 'Americas';\n    const countryData = countries.filter(country => country.region === region).map(country => ({\n        key: country.name.common,\n        name: country.translations.spa.common,\n        capital: country.capital,\n        population: country.population,\n        flag: country.flags.svg,\n        area: country.area,\n    }));\n\n    return (\n        <React.Fragment>\n            <HeaderSection title={'America'}/>\n\n            <section className=\"text-container\">\n                <p>El continente de la divesidad cultural y geográfica.</p>\n            </section>\n\n            <main className=\"main-container--card\">\n                {countryData.map(country => (\n                    <CardSection \n                        key={country.key}\n                        name={country.name}\n                        flag={country.flag}\n                        capital={country.capital}\n                        area={country.area}\n                        poblation={country.population}\n                    />\n                ))}\n            </main>\n\n            <FooterSection />\n        </React.Fragment>\n    );\n};\n\nexport { AmericasPage };","import React from \"react\";\nimport { HeaderSection } from \"../Components/HeaderSection\";\nimport { FooterSection } from \"../Components/FooterSection\";\nimport { appContext } from \"../Helpers/appContext\";\nimport { CardSection } from \"../Components/CardSection\";\nimport './styles.css';\n\nfunction EuropePage () {\n    const { countries } = React.useContext(appContext);\n    const region = 'Europe';\n    const countryData = countries.filter(country => country.region === region).map(country => ({\n        key: country.name.common,\n        name: country.translations.spa.common,\n        capital: country.capital,\n        population: country.population,\n        flag: country.flags.svg,\n        area: country.area,\n    }));\n\n    return (\n        <React.Fragment>\n            <HeaderSection title={'Europa'}/>\n\n            <section className=\"text-container\">\n                <p>El continente de la modernidad y la innovación.</p>\n            </section>\n\n            <main className=\"main-container--card\">\n                {countryData.map(country => (\n                    <CardSection \n                        key={country.key}\n                        name={country.name}\n                        flag={country.flag}\n                        capital={country.capital}\n                        area={country.area}\n                        poblation={country.population}\n                    />\n                ))}\n            </main>\n\n            <FooterSection />\n        </React.Fragment>\n    );\n};\n\nexport { EuropePage };","import React from \"react\";\nimport { HeaderSection } from \"../Components/HeaderSection\";\nimport { FooterSection } from \"../Components/FooterSection\";\nimport { appContext } from \"../Helpers/appContext\";\nimport { CardSection } from \"../Components/CardSection\";\nimport './styles.css';\n\nfunction AsiaPage () {\n    const { countries } = React.useContext(appContext);\n    const region = \"Asia\";\n    const countryData = countries.filter(country => country.region === region).map(country => ({\n        key: country.name.common,\n        name: country.translations.spa.common,\n        capital: country.capital,\n        population: country.population,\n        flag: country.flags.svg,\n        area: country.area,\n    }));\n\n    return (\n        <React.Fragment>\n            <HeaderSection title={'Asia'}/>\n\n            <section className=\"text-container\">\n                <p>La tierra de las religiones y filosofias milenarias.</p>\n            </section>\n\n            <main className=\"main-container--card\">\n                {countryData.map(country => (\n                    <CardSection \n                        key={country.key}\n                        name={country.name}\n                        flag={country.flag}\n                        capital={country.capital}\n                        area={country.area}\n                        poblation={country.population}\n                    />\n                ))}\n            </main>\n\n            <FooterSection />\n        </React.Fragment>\n    );\n};\n\nexport { AsiaPage };","import React from \"react\";\nimport { HeaderSection } from \"../Components/HeaderSection\";\nimport { FooterSection } from \"../Components/FooterSection\";\nimport { appContext } from \"../Helpers/appContext\";\nimport { CardSection } from \"../Components/CardSection\";\nimport './styles.css';\n\nfunction OceaniaPage () {\n    const { countries } = React.useContext(appContext); \n    const region = 'Oceania';\n    const countryData = countries.filter(country => country.region === region).map(country => ({\n        key: country.name.common,\n        name: country.translations.spa.common,\n        capital: country.capital,\n        population: country.population,\n        flag: country.flags.svg,\n    }));\n\n    return (\n        <React.Fragment>\n            <HeaderSection title={'Oceania'}/>\n\n            <section className=\"text-container\">\n                <p>El continente de la aventura y la exploración.</p>\n            </section>\n\n            <main className=\"main-container--card\">\n                {countryData.map(country => (\n                    <CardSection \n                        key={country.key}\n                        name={country.name}\n                        flag={country.flag}\n                        capital={country.capital}\n                    />\n                ))}\n            </main>\n\n            <FooterSection />\n        </React.Fragment>\n    );\n};\n\nexport { OceaniaPage };","import React from \"react\";\nimport { HeaderSection } from \"../Components/HeaderSection\";\nimport { FooterSection } from \"../Components/FooterSection\";\nimport { appContext } from \"../Helpers/appContext\";\nimport { CardSection } from \"../Components/CardSection\";\nimport './styles.css';\n\nfunction AfricaPage () {\n    const { countries } = React.useContext(appContext);\n    const region = 'Africa';\n    const countryData = countries.filter(country => country.region === region).map(country => ({\n        key: country.name.common,\n        name: country.translations.spa.common,\n        capital: country.capital,\n        population: country.population,\n        flag: country.flags.svg,\n        area: country.area,\n    }));\n\n    return (\n        <React.Fragment>\n            <HeaderSection title={'Africa'}/>\n\n            <section className=\"text-container\">\n                <p>La cuna de la humanidad y la diversidad cultural.</p>\n            </section>\n\n            <main className=\"main-container--card\">\n                {countryData.map(country => (\n                    <CardSection \n                        key={country.key}\n                        name={country.name}\n                        flag={country.flag}\n                        capital={country.capital}\n                        area={country.area}\n                        poblation={country.population}\n                    />\n                ))}\n            </main>\n\n            <FooterSection />\n        </React.Fragment>\n    );\n};\n\nexport { AfricaPage };","import React from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { HomePage } from './HomePage/';\nimport { appContext } from './Helpers/appContext';\nimport { useFetchCountries } from './Helpers/useData';\nimport { AmericasPage } from './AmericasPage';\nimport { EuropePage } from './EuropePage';\nimport { AsiaPage } from './AsiaPage';\nimport { OceaniaPage } from './OceaniaPage';\nimport { AfricaPage } from './AfricaPage';\n\nfunction App() {\n  const [countries, setCountries] = useFetchCountries(\"https://restcountries.com/v3.1/all\");\n  return (\n    <React.Fragment>\n      <HashRouter>\n        <appContext.Provider value={{countries, setCountries}}>\n\n          <Routes>\n            <Route path='/' element={<HomePage/>}/>\n            <Route path='/Americas' element={<AmericasPage/>}/>\n            <Route path='/Europe' element={<EuropePage/>}/>\n            <Route path='/Asia' element={<AsiaPage/>}/>\n            <Route path='/Oceania' element={<OceaniaPage/>}/>\n            <Route path='/Africa' element={<AfricaPage/>}/>\n          </Routes>\n        \n        </appContext.Provider>\n      </HashRouter>\n    </React.Fragment>\n  );\n}\n\nexport  { App };","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from './App';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}